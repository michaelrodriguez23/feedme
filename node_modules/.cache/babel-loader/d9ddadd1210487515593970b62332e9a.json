{"ast":null,"code":"import _slicedToArray from \"/Users/michaelrodriguez/Documents/myWeb/feed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/michaelrodriguez/Documents/myWeb/feed/src/SongFeed.js\";\nimport React, { useState, useEffect } from \"react\";\n\nvar Arena = require(\"are.na\");\n\nfunction MapSongs(props) {\n  var _this = this;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"winamp-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, props.songs.slice(0).reverse().map(function (song, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: song.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 15\n      }\n    }, index), /*#__PURE__*/React.createElement(\"img\", {\n      class: \"thumbnail\",\n      src: song.image.display.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      href: song.source.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }\n    }, \" \", song.title, \" \"));\n  })));\n}\n\nexport function SongFeed() {\n  var arena = new Arena({\n    accessToken: \"1986df47db6a294df0575f57e7d655cc5e6ea1bfe87da5a47be605d717fc0086\"\n  });\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      songs = _useState2[0],\n      setSongs = _useState2[1];\n\n  useEffect(function () {\n    arena.channel(\"la-musica\").contents({\n      per: 20\n    }).then(function (contents) {\n      return setSongs(contents);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }, []);\n  shuffleArray(songs);\n\n  function shuffleArray(songs) {\n    for (var i = songs.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = songs[i];\n      songs[i] = songs[j];\n      songs[j] = temp;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(MapSongs, {\n    songs: songs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }\n  }, \" \"));\n}","map":{"version":3,"sources":["/Users/michaelrodriguez/Documents/myWeb/feed/src/SongFeed.js"],"names":["React","useState","useEffect","Arena","require","MapSongs","props","songs","slice","reverse","map","song","index","id","image","display","url","source","title","SongFeed","arena","accessToken","setSongs","channel","contents","per","then","catch","err","console","log","shuffleArray","i","length","j","Math","floor","random","temp"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,QAAD,CAArB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,sBACE,uDACE;AAAK,IAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,KAAN,CACEC,KADF,CACQ,CADR,EAEEC,OAFF,GAGEC,GAHF,CAGM,UAACC,IAAD,EAAOC,KAAP;AAAA,wBACH;AAAI,MAAA,GAAG,EAAED,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,KAAJ,CADF,eAEE;AAAK,MAAA,KAAK,EAAC,WAAX;AAAuB,MAAA,GAAG,EAAED,IAAI,CAACG,KAAL,CAAWC,OAAX,CAAmBC,GAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAG,MAAA,IAAI,EAAEL,IAAI,CAACM,MAAL,CAAYD,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA4BL,IAAI,CAACO,KAAjC,MAHF,CADG;AAAA,GAHN,CADH,CAFF,CADF;AAiBD;;AAED,OAAO,SAASC,QAAT,GAAoB;AACzB,MAAMC,KAAK,GAAG,IAAIjB,KAAJ,CAAU;AACtBkB,IAAAA,WAAW,EACT;AAFoB,GAAV,CAAd;;AADyB,kBAMDpB,QAAQ,CAAC,EAAD,CANP;AAAA;AAAA,MAMpBM,KANoB;AAAA,MAMbe,QANa;;AAQzBpB,EAAAA,SAAS,CAAC,YAAM;AACdkB,IAAAA,KAAK,CACFG,OADH,CACW,WADX,EAEGC,QAFH,CAEY;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAFZ,EAGGC,IAHH,CAGQ,UAACF,QAAD;AAAA,aAAcF,QAAQ,CAACE,QAAD,CAAtB;AAAA,KAHR,EAIGG,KAJH,CAIS,UAACC,GAAD;AAAA,aAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA,KAJT;AAKD,GANQ,EAMN,EANM,CAAT;AAQAG,EAAAA,YAAY,CAACxB,KAAD,CAAZ;;AAEA,WAASwB,YAAT,CAAsBxB,KAAtB,EAA6B;AAC3B,SAAK,IAAIyB,CAAC,GAAGzB,KAAK,CAAC0B,MAAN,GAAe,CAA5B,EAA+BD,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACzC,UAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,UAAMM,IAAI,GAAG/B,KAAK,CAACyB,CAAD,CAAlB;AACAzB,MAAAA,KAAK,CAACyB,CAAD,CAAL,GAAWzB,KAAK,CAAC2B,CAAD,CAAhB;AACA3B,MAAAA,KAAK,CAAC2B,CAAD,CAAL,GAAWI,IAAX;AACD;AACF;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAM,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE/B,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAN,CAAP;AACD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nconst Arena = require(\"are.na\");\n\nfunction MapSongs(props) {\n  return (\n    <>\n      <div id=\"winamp-container\"></div>\n      <ul>\n        {props.songs\n          .slice(0)\n          .reverse()\n          .map((song, index) => (\n            <li key={song.id}>\n              <p>{index}</p>\n              <img class=\"thumbnail\" src={song.image.display.url}></img>\n              <a href={song.source.url}> {song.title} </a>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n}\n\nexport function SongFeed() {\n  const arena = new Arena({\n    accessToken:\n      \"1986df47db6a294df0575f57e7d655cc5e6ea1bfe87da5a47be605d717fc0086\",\n  });\n\n  let [songs, setSongs] = useState([]);\n\n  useEffect(() => {\n    arena\n      .channel(\"la-musica\")\n      .contents({ per: 20 })\n      .then((contents) => setSongs(contents))\n      .catch((err) => console.log(err));\n  }, []);\n\n  shuffleArray(songs);\n\n  function shuffleArray(songs) {\n    for (let i = songs.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = songs[i];\n      songs[i] = songs[j];\n      songs[j] = temp;\n    }\n  }\n\n  return <div>{<MapSongs songs={songs}> </MapSongs>}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}