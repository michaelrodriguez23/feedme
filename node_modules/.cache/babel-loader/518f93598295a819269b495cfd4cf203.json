{"ast":null,"code":"var _classCallCheck = require(\"/Users/michaelrodriguez/Documents/myWeb/feed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/michaelrodriguez/Documents/myWeb/feed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar axios = require(\"axios\"); // Helper to deal with pulling an inner object out of returned data\n// and then assigning other data as \"attrs\"\n\n\nvar pullObject = function pullObject(key) {\n  return function (object) {\n    var newObj = object[key];\n    delete object[key];\n    Object.defineProperty(newObj, \"attrs\", {\n      value: object\n    });\n    return newObj;\n  };\n}; // Helper to accept an array or multiple arguments\n// and convert to array\n\n\nvar arrayOrList = function arrayOrList(list) {\n  if (typeof list[0] === \"object\" || typeof list[0] === \"array\") {\n    return list[0];\n  }\n\n  return list;\n};\n\nvar Arena = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function Arena(opts) {\n    var _this = this;\n\n    _classCallCheck(this, Arena);\n\n    opts = opts || {};\n    var headers = {\n      \"Content-Type\": \"application/json\"\n    };\n\n    if (opts.accessToken) {\n      headers[\"Authorization\"] = \"Bearer \".concat(opts.accessToken);\n    }\n\n    if (opts.authToken) {\n      headers[\"X-AUTH-TOKEN\"] = \"\".concat(opts.authToken);\n    }\n\n    this.axios = axios.create({\n      baseURL: opts.baseURL || \"https://api.are.na/v2/\",\n      headers: headers\n    });\n\n    this.requestHandler = opts.requestHandler || function (method, url, data) {\n      return method === \"get\" ? _this.axios.request({\n        method: method,\n        url: url,\n        params: data\n      }).then(function (_ref) {\n        var data = _ref.data;\n        return data;\n      }) : _this.axios.request({\n        method: method,\n        url: url,\n        data: data\n      }).then(function (_ref2) {\n        var data = _ref2.data;\n        return data;\n      });\n    };\n  }\n\n  _createClass(Arena, [{\n    key: \"_req\",\n    value: function _req(method, url) {\n      for (var _len = arguments.length, data = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        data[_key - 2] = arguments[_key];\n      }\n\n      return this.requestHandler(method.toLowerCase(), url, Object.assign.apply(Object, [{}].concat(data)));\n    }\n  }, {\n    key: \"group\",\n    value: function group(slug) {\n      var _this2 = this;\n\n      slug = slug || \"\";\n      return {\n        get: function get(opts) {\n          return _this2._req(\"GET\", \"groups/\" + slug, opts);\n        },\n        channels: function channels(opts) {\n          return _this2._req(\"GET\", \"groups/\" + slug + \"/channels\", opts).then(pullObject(\"channels\"));\n        }\n      };\n    }\n  }, {\n    key: \"channel\",\n    value: function channel(slug, data) {\n      var _this3 = this;\n\n      slug = slug || \"\";\n      return {\n        get: function get(opts) {\n          return _this3._req(\"GET\", \"channels/\" + slug, data, opts);\n        },\n        thumb: function thumb(opts) {\n          return _this3._req(\"GET\", \"channels/\" + slug + \"/thumb\", data, opts);\n        },\n        connections: function connections(opts) {\n          return _this3._req(\"GET\", \"channels/\" + slug + \"/connections\", data, opts).then(pullObject(\"channels\"));\n        },\n        channels: function channels(opts) {\n          return _this3._req(\"GET\", \"channels/\" + slug + \"/channels\", data, opts).then(pullObject(\"channels\"));\n        },\n        contents: function contents(opts) {\n          return _this3._req(\"GET\", \"channels/\" + slug + \"/contents\", data, opts).then(pullObject(\"contents\"));\n        },\n        collaborators: function collaborators(opts) {\n          return _this3._req(\"GET\", \"channels/\" + slug + \"/collaborators\", data, opts).then(pullObject(\"users\"));\n        },\n        create: function create(title, status) {\n          return _this3._req(\"POST\", \"channels\", {\n            // Allow it to be called as .channel(title).create(status) or\n            // .channel().create(title, status)\n            title: slug || title,\n            status: slug ? title : status\n          });\n        },\n        delete: function _delete(deleteSlug) {\n          return _this3._req(\"DELETE\", \"channels/\" + (slug || deleteSlug));\n        },\n        update: function update(opts) {\n          return _this3._req(\"PUT\", \"channels/\" + slug, opts);\n        },\n        addCollaborators: function addCollaborators() {\n          for (var _len2 = arguments.length, ids = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            ids[_key2] = arguments[_key2];\n          }\n\n          return _this3._req(\"POST\", \"channels/\" + slug + \"/collaborators\", {\n            \"ids[]\": arrayOrList(ids)\n          }).then(pullObject(\"users\"));\n        },\n        deleteCollaborators: function deleteCollaborators() {\n          for (var _len3 = arguments.length, ids = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            ids[_key3] = arguments[_key3];\n          }\n\n          return _this3._req(\"DELETE\", \"channels/\" + slug + \"/collaborators\", {\n            \"ids[]\": arrayOrList(ids)\n          }).then(pullObject(\"users\"));\n        },\n        createBlock: function createBlock(opts) {\n          if (opts.content.match(/^https?:\\/\\//)) {\n            opts.source = opts.content;\n          }\n\n          return _this3._req(\"POST\", \"channels/\" + slug + \"/blocks\", opts);\n        },\n        deleteBlock: function deleteBlock(id) {\n          return _this3._req(\"DELETE\", \"channels/\" + slug + \"/blocks/\" + id);\n        }\n      };\n    }\n  }, {\n    key: \"block\",\n    value: function block(id, data) {\n      var _this4 = this;\n\n      return {\n        get: function get(opts) {\n          return _this4._req(\"GET\", \"blocks/\" + id, data, opts);\n        },\n        channels: function channels(opts) {\n          return _this4._req(\"GET\", \"blocks/\" + id + \"/channels\", data, opts).then(pullObject(\"channels\"));\n        },\n        create: function create(channel, opts) {\n          return _this4.channel(channel).createBlock(opts);\n        },\n        update: function update(opts) {\n          return _this4._req(\"PUT\", \"blocks/\" + id, data, opts);\n        }\n      };\n    }\n  }, {\n    key: \"user\",\n    value: function user(id, data) {\n      var _this5 = this;\n\n      return {\n        get: function get(opts) {\n          return _this5._req(\"GET\", \"users/\" + id, data, opts);\n        },\n        channels: function channels(opts) {\n          return _this5._req(\"GET\", \"users/\" + id + \"/channels\", data, opts).then(pullObject(\"channels\"));\n        },\n        following: function following(opts) {\n          return _this5._req(\"GET\", \"users/\" + id + \"/following\", data, opts).then(pullObject(\"following\"));\n        },\n        followers: function followers(opts) {\n          return _this5._req(\"GET\", \"users/\" + id + \"/followers\", data, opts).then(pullObject(\"users\"));\n        }\n      };\n    }\n  }, {\n    key: \"search\",\n    value: function search(q, data) {\n      var _this6 = this;\n\n      return {\n        all: function all(opts) {\n          return _this6._req(\"GET\", \"search\", {\n            q: q\n          }, data, opts);\n        },\n        users: function users(opts) {\n          return _this6._req(\"GET\", \"search/users\", {\n            q: q\n          }, data, opts).then(pullObject(\"users\"));\n        },\n        channels: function channels(opts) {\n          return _this6._req(\"GET\", \"search/channels\", {\n            q: q\n          }, data, opts).then(pullObject(\"channels\"));\n        },\n        blocks: function blocks(opts) {\n          return _this6._req(\"GET\", \"search/blocks\", {\n            q: q\n          }, data, opts).then(pullObject(\"blocks\"));\n        }\n      };\n    }\n  }]);\n\n  return Arena;\n}();\n\nmodule.exports = Arena;","map":null,"metadata":{},"sourceType":"script"}